/*
**
** 	ASTRO CHECKBOX & RADIO BUTTONS
** 	==========================================================================
**  3.0 Notes
**  Added Custom CSS Properties to support light/dark theming
**  Added fallback properties for IE11
**  2.0 Notes
**  - Removed hand cursor on checkbox
**  - Updated styles to Astro 2.0
**	1.4 Notes
**	- Added rux_ and BEM compatible classes to all satcom_ NOTE: satcom_ will be removed in a future version
**	- Removed prefixed linear gradients
**  - Added line-height to label to fix minor alignment issue
**  - Moved user-select to parent element
**  - Removed user-select and placed it in astro.css to apply to all input types
*/

.rux-checkbox,
.satcom-checkbox,
.rux-radio-button,
.satcom-radio-button {
  display: flex;
  position: relative;
  margin: 0 0 1rem 0;

  line-height: 1.2;

  /* DEBUG */
  /* padding: 1rem; */
  /* outline: 1px solid red;
  background: linear-gradient(
    to bottom,
    rgba(255, 0, 0, 0),
    rgba(255, 0, 0, 0) 49.5%,
    rgba(255, 0, 0, 1) 50%,
    rgba(255, 0, 0, 1) 51.5%,
    rgba(255, 0, 0, 0) 51%,
    rgba(255, 0, 0, 0)
  ); */
}

.rux-checkbox input[type="checkbox"],
.satcom-checkbox input[type="checkbox"],
.rux-radio-button input[type="radio"],
.satcom-radio-button input[type="radio"] {
  -webkit-appearance: none;
  display: none;
}

.rux-checkbox input[type="checkbox"] + label,
.satcom-checkbox input[type="checkbox"] + label,
.rux-radio-button input[type="radio"] + label,
.satcom-radio-button input[type="radio"] + label {
  position: relative;
  display: flex;

  align-items: center;
  justify-content: flex-start;

  color: var(--controlLabelColor, rgb(255, 255, 255));
}

.rux-checkbox input[type="checkbox"] + label::before,
.satcom-checkbox input[type="checkbox"] + label::before,
.rux-radio-button input[type="radio"] + label::before,
.satcom-radio-button input[type="radio"] + label::before {
  display: flex;
  flex-shrink: 0;
  flex-grow: 0;
  content: "";

  align-self: start;

  height: var(--controlOptionSize, 1.25rem);
  width: var(--controlOptionSize, 1.25rem);

  margin: 0 0.625rem 0 0;

  border: 1px solid var(--controlBorderColor, rgb(122, 193, 255));
}

.rux-checkbox input[type="checkbox"] + label::before,
.satcom-checkbox input[type="checkbox"] + label::before {
  border-radius: 2px;
}

.rux-radio-button input[type="radio"] + label::before,
.satcom-radio-button input[type="radio"] + label::before {
  border-radius: 100%;
  background-color: transparent;
}

.rux-checkbox input[type="checkbox"]:checked + label::before,
.satcom-checkbox input[type="checkbox"]:checked + label::before,
.rux-radio-button input[type="radio"]:checked + label::before,
.satcom-radio-button input[type="radio"]:checked + label::before {
  background-color: var(
    --controlSelectedOutlineBackgroundColor,
    rgb(58, 129, 191)
  );
  border-color: var(--controlSelectedOutlineBorderColor, rgb(255, 255, 255));
}

.rux-checkbox input[type="checkbox"]:checked + label::after,
.satcom-checkbox input[type="checkbox"]:checked + label::after,
.rux-radio-button input[type="radio"]:checked + label::after,
.satcom-radio-button input[type="radio"]:checked + label::after {
  position: absolute;
  top: 5px;
  display: flex;

  content: "";
}

.rux-checkbox input[type="checkbox"]:checked + label::after,
.satcom-checkbox input[type="checkbox"]:checked + label::after {
  height: 6px;
  width: 12px;
  left: 4px;
  border-right: 2px solid var(--controlTextColor, rgb(255, 255, 255));
  border-top: 2px solid var(--controlTextColor, rgb(255, 255, 255));

  transform: rotate(125deg);
}

.rux-radio-button input[type="radio"]:checked + label::after,
.satcom-radio-button input[type="radio"]:checked + label::after {
  left: 5px;

  height: 10px;
  width: 10px;

  border-radius: 100%;
  /* box-shadow: inset 0 0 1px 0 rgba(255, 255, 255, 0.9); */

  background-color: var(--controlTextColor, rgb(255, 255, 255));
}

.rux-checkbox input[type="checkbox"]:disabled + label,
.satcom-checkbox input[type="checkbox"]:disabled + label,
.rux-radio-button input[type="radio"]:disabled + label,
.satcom-radio-button input[type="radio"]:disabled + label {
  cursor: var(--disabledCursor, not-allowed);
  opacity: var(--disabledOpacity, 0.4);
}
